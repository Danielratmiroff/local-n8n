{
  "active": true,
  "connections": {
    "Config": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Failed Flows": {
      "main": [
        [
          {
            "node": "Loop Over Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Workflows",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Failed Flows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starting Message": {
      "main": [
        [
          {
            "node": "Get many workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many workflows": {
      "main": [
        [
          {
            "node": "FilterUnarchived",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FilterUnarchived": {
      "main": [
        [
          {
            "node": "Loop Over Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Workflows": {
      "main": [
        [
          {
            "node": "Completed Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-06T15:19:42.385Z",
  "id": "hvD1QpXVHbBdSz1b",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "n8n_workflows_backup",
  "nodes": [
    {
      "parameters": {},
      "id": "2605d468-4d90-4328-bdb5-4291f7f21c72",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        480,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 731.7039821513649,
        "width": 1910.7813046051347,
        "color": 6
      },
      "id": "dc1b8717-195c-4305-b089-02317e0c8fc3",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        464
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "91b1e4af-cfcc-450f-8369-165bc5974729",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        64,
        848
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "d55751dd-35d1-4d6c-819b-a1991d551f33",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1728,
        672
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "1a7addcd-fcfd-43f5-9558-e5090c08c56d",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        688,
        544
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "aa2cd760-6371-4c90-8409-f621f8e2d32a",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        448,
        560
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "0ce55b69-d7c9-4de7-bca1-fe383283138b",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        448,
        832
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "54f4ef7c-0d3d-439d-bdf0-63cec60da047",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        640,
        832
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "644a5324-3914-4176-ba95-8b68c52d538f",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        1040,
        832
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "6ffc68ca-63a7-4b41-afa8-702a9681ffb2",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1264,
        656
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "40747840-9f85-4c16-b58a-733eb5298f7c",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1264,
        832
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "10d28bef-07d3-4228-90c3-406d0a3d3ffa",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1264,
        1024
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').first().json.repo_path }}/{{ $('Execute Workflow Trigger').item.json.name }}/{{ $('Execute Workflow Trigger').item.json.id }}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "e5a0c081-20b1-4a54-bb15-4789e5272190",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1488,
        1024
      ],
      "typeVersion": 1,
      "webhookId": "bd8b6c95-e69f-44b2-8e35-6c3c177a1509",
      "credentials": {
        "githubOAuth2Api": {
          "id": "sCnVBbJ9SU8btzpy",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').first().json.repo_path }}/{{ $('Execute Workflow Trigger').item.json.name }}/{{ $('Execute Workflow Trigger').item.json.id }}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "d83583cc-58d1-47f3-864d-736410a991cc",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1488,
        832
      ],
      "typeVersion": 1,
      "webhookId": "a369f082-bc06-4884-9c1c-3e1dd29c2cf3",
      "credentials": {
        "githubOAuth2Api": {
          "id": "sCnVBbJ9SU8btzpy",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 23
            }
          ]
        }
      },
      "id": "1e53064f-74cc-4945-b659-d7bbb39bac49",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        480,
        288
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"
            },
            {
              "id": "24e98f31-2958-4652-9965-264018a94a61",
              "name": "namePath",
              "value": "={{ $('Execute Workflow Trigger').item.json.name }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "cbaf976d-0293-4afa-894a-76fcc81d170a",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        848,
        832
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `workflowName` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set in the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage.",
        "height": 417,
        "width": 385,
        "color": 4
      },
      "id": "0e3bdd04-d06e-46f5-9a1a-cc464f411d6a",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 416,
        "width": 1465,
        "color": 7
      },
      "id": "29e5a440-0f45-4a75-ba0a-47fb90876ee6",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        448,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C097V3Q3W02",
          "mode": "list",
          "cachedResultName": "all-automations"
        },
        "messageType": "block",
        "blocksUi": "=[{\n        \"type\": \"header\",\n        \"text\": {\n            \"type\": \"plain_text\",\n            \"text\": \"🚀 Workflow Backup Initiated\",\n            \"emoji\": true\n        }\n    },\n    {\n        \"type\": \"section\",\n        \"text\": {\n            \"type\": \"mrkdwn\",\n            \"text\": \"The daily workflow backup to GitHub has started. We'll let you know when it's done! :robot_face:\"\n        }\n    }]",
        "text": "=🚀 Workflow Backup Initiated [{{ $execution.id }}]",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "546d98cc-984a-4015-aa8b-3aa3f1859bd2",
      "name": "Starting Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        704,
        192
      ],
      "webhookId": "c02eb407-5547-4aa0-9ebf-46dab67b63b6",
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "RklUSQ4nWtuBUYsD",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "={{ $workflow.id }}",
        "mode": "each",
        "options": {}
      },
      "id": "3655d098-4fb7-4512-a685-f47a6abcad9a",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1456,
        208
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C097V3Q3W02",
          "mode": "list",
          "cachedResultName": "all-automations"
        },
        "text": "=✅ Backup has completed - {{ $('FilterUnarchived').all().length }} workflows have been processed.",
        "otherOptions": {}
      },
      "id": "602834a4-b906-4431-9f79-58640e27d5a2",
      "name": "Completed Notification",
      "type": "n8n-nodes-base.slack",
      "position": [
        1456,
        32
      ],
      "webhookId": "a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4",
      "executeOnce": true,
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "RklUSQ4nWtuBUYsD",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C097V3Q3W02",
          "mode": "list",
          "cachedResultName": "all-automations"
        },
        "text": "=:x: Failed to backup: {{ $('Loop Over Workflows').item.json.name }} - {{ $('Loop Over Workflows').item.json.id }}",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "b4909736-f0ca-431e-8d3a-a663c5ce71cb",
      "name": "Failed Flows",
      "type": "n8n-nodes-base.slack",
      "position": [
        1664,
        224
      ],
      "webhookId": "2a092edb-de12-490f-931b-34d70e7d7696",
      "typeVersion": 2.2,
      "credentials": {
        "slackOAuth2Api": {
          "id": "RklUSQ4nWtuBUYsD",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').first().json.repo_path }}/{{ $('Execute Workflow Trigger').item.json.name }}/{{ $('Execute Workflow Trigger').item.json.id }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "5ca81161-625f-4036-8c38-6be324707a51",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        240,
        560
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "595ebb26-c094-463e-bda2-8fec9479e23c",
      "credentials": {
        "githubApi": {
          "id": "6o5aw5AwRwKgT1DQ",
          "name": "GitHub account 2"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "=Danielratmiroff"
            },
            {
              "id": "8cac215c-4fd7-422f-9fd2-6b2d1e5e0383",
              "name": "repo_name",
              "type": "string",
              "value": "=local-n8n"
            },
            {
              "id": "eee305e9-4164-462a-86bd-80f0d58a31ae",
              "name": "repo_path",
              "type": "string",
              "value": "=workflows"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "7ea3c2c5-3b83-4823-967d-7ebd4b1903a7",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        240,
        848
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "4f3dcd8a-fa41-41d0-81a9-d7c3356037ba",
      "name": "Get many workflows",
      "type": "n8n-nodes-base.n8n",
      "position": [
        880,
        192
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "rl7WokFQxO4Y4lSL",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6bc88947-1720-47c6-b286-664a82632deb",
              "leftValue": "={{ $json.isArchived }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1040,
        192
      ],
      "id": "580252b5-fdd7-4f42-a9a6-22264f5486de",
      "name": "FilterUnarchived"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b16267db-b396-4979-bc09-8230a3159558",
      "name": "Loop Over Workflows",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1232,
        192
      ],
      "typeVersion": 3
    }
  ],
  "pinData": {},
  "repo_name": "local-n8n",
  "repo_owner": "Danielratmiroff",
  "repo_path": "workflows",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-08-06T15:22:07.495Z",
      "updatedAt": "2025-08-06T15:22:07.495Z",
      "id": "U6KHfwrQCww3oJlf",
      "name": "personal"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-08-06T19:15:19.000Z",
  "versionId": "51ebffea-63dc-43f5-98b6-347a11fbc942"
}